/*
	Generated by KBEngine!
	Please do not modify this file!
	
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Avatar.def
	public class EntityBaseEntityCall_AvatarBase : EntityCall
	{

		public EntityBaseEntityCall_AvatarBase(Int32 eid, string ename) : base(eid, ename)
		{
			type = ENTITYCALL_TYPE.ENTITYCALL_TYPE_BASE;
		}

		public void reqChangeSelectCard(string arg1)
		{
			Bundle pBundle = newCall("reqChangeSelectCard", 0);
			if(pBundle == null)
				return;

			bundle.writeString(arg1);
			sendCall(null);
		}

		public void reqEnterRoom()
		{
			Bundle pBundle = newCall("reqEnterRoom", 0);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqFinishSelectCards()
		{
			Bundle pBundle = newCall("reqFinishSelectCards", 0);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqLatestBattleInfo()
		{
			Bundle pBundle = newCall("reqLatestBattleInfo", 0);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqLaunchCardSkill(Int32 arg1, string arg2, string arg3, Int32 arg4, Int32 arg5)
		{
			Bundle pBundle = newCall("reqLaunchCardSkill", 0);
			if(pBundle == null)
				return;

			bundle.writeInt32(arg1);
			bundle.writeString(arg2);
			bundle.writeString(arg3);
			bundle.writeInt32(arg4);
			bundle.writeInt32(arg5);
			sendCall(null);
		}

		public void reqPlayCardAction(Int32 arg1, string arg2, Int32 arg3)
		{
			Bundle pBundle = newCall("reqPlayCardAction", 0);
			if(pBundle == null)
				return;

			bundle.writeInt32(arg1);
			bundle.writeString(arg2);
			bundle.writeInt32(arg3);
			sendCall(null);
		}

		public void reqSyncHeartBeat()
		{
			Bundle pBundle = newCall("reqSyncHeartBeat", 0);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqUpdateSelectedCard()
		{
			Bundle pBundle = newCall("reqUpdateSelectedCard", 0);
			if(pBundle == null)
				return;

			sendCall(null);
		}

	}

	public class EntityCellEntityCall_AvatarBase : EntityCall
	{

		public EntityCellEntityCall_AvatarBase(Int32 eid, string ename) : base(eid, ename)
		{
			type = ENTITYCALL_TYPE.ENTITYCALL_TYPE_CELL;
		}

	}
	}
